Day-1
======
# What is VCS. Why we need VCS.
	VCS features.

GIT is called as 
	version controll system(VCS).
	Revisioned controll system(RCS).
	Source code management(SCM).

#
GIT Installation (Ubuntu):
$ sudo apt-get update
$ sudo apt-get install git

Verify Installation:
	which git
	git --version


GIT Uninstallation:
$ sudo apt-get remove git


#
Git Architecture Diagram

	------------------------------------------------------	
	. (Souce area) | ..(Stage) | .git (Local Repository) |
		       |           |			     |
	------------------------------------------------------

	- Centralized VCS -  Ex: CVS/SVN/Clearcase/Perforce
	- Distributed VCS -  Ex: GIT/Bitkeeper

Day-2
======
Creating remote repository in github
===============
1. create an account in github.com
	URL: https://github.com

2. login github.com with your credentials. 	
	click on "new repository" --> give a name "DevOps_Classes" --> "create reopository" 

3. copy the repo URL from Github:
	https://github.com/swapnilmahajan-git/DevOps_Classes.git

4. Clone the source code from remote repository using 'git clone' command
	$ git clone https://github.com/swapnilmahajan-git/DevOps_Classes.git

5. 	$ cd DevOps_Classes 
		and observe ".git" folder. ".git" is called as "Local Reposiotory".

6. Create some sample code and submit the code to remote repo.

	    $ touch Login.java
		or 
	    $ vim Login.java  (Note -> create file using command or go to directory and create new document)

	    $ git status
		- check the status of files.

	    $ git add Login.java
		- Move file from (.)source area to (..)stage area 

	    $ git status
		- check the status of files.

	    $ git commit Login.java -m "login module code"
		- move from stage area to .git area

	    $ git status
		- check the status of files.

	    $ git push
 		- move from .git to reomte area.

	    $ git log 
		- check log of the commit  

#
- Git Commit structure
	User/Email
	Timestamp
	Commit message
	
#
SHA / Version / Revison


#
Setting up mandatory configurations:
=============================================
$ git config --global user.name "swapnil"
$ git config --global user.email "abc@gmail.com"

$ git config --global credential.helper cache

Check the configurations using below command
$ git config --list

Git stores all configurations in below file
"/home/swapnil/.gitconfig"




